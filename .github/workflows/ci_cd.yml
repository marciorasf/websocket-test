name: CI/CD

on:
  push:
    branches: [master]

  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install poetry
        uses: snok/install-poetry@v1.2.0
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Run unit tests
        run: poetry run pytest

      - name: Format code with black
        run: poetry run black server

      - name: Analyse code with flake8
        run: poetry run flake8 server

      - name: Analyse code with mypy
        run: poetry run mypy server

      - name: Analyse the code with pylint
        run: poetry run pylint server
